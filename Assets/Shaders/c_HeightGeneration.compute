#pragma kernel CalculateHeight

#define PI 3.14159265359

// Inputs
int Size;
int Resolution;
Texture2D<float3> SpectrumMap;

// Output
RWTexture2D<float3> HeightMap;

float2 WaveVector(float2 pos)
{
    float n = Resolution / 2;
    float k_x = 2 * PI * (pos.x - n) / Size;
    float k_z = 2 * PI * (pos.y - n) / Size;
    return  float2(k_x, k_z);
}

float2 GetPos(float2 pos)
{
    float n = Resolution / 2;
    float x = (pos.x - n) * Size / Resolution;
    float z = (pos.y - n) * Size / Resolution;
    return float2(x, z);
}

[numthreads(8,8,1)]
void CalculateHeight (uint3 id : SV_DispatchThreadID)
{
    float sum = 0;

    float2 pos = GetPos(float2(id.x,id.y));
    
    // sum up every frequency from spectrum for each heightmap pixel
    for(int x = 0; x < Resolution; x++)
    {
        for (int y = 0; y < Resolution; y++)
        {
            float2 k = WaveVector(float2(x,y));
            
            sum += SpectrumMap[k].r * exp(dot(k, pos));
        }
    }

    // float2 k = WaveVector(float2(id.x,id.y));
    // float2 x1 = GetX(float2(x,y));
    
    HeightMap[id.xy] = float3(pos.x, pos.y, 0);
}

